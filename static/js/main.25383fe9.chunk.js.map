{"version":3,"sources":["reducers/counter.js","App.js","reducers/theme.js","index.js"],"names":["initialState","counter","module","exports","state","action","type","App","props","useSelector","entities","theme","StyledDiv","styled","div","isLight","dispatch","useDispatch","className","onClick","combineReducers","counterReducer","themeReducer","rootReducer","store","createStore","composeWithDevTools","render","document","getElementById"],"mappings":"oGAAA,IAAMA,EAAe,CACnBC,QAAS,GAGXC,EAAOC,QAAU,WAAoD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAClE,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CACLL,QAASG,EAAMH,QAAU,GAE7B,IAAK,YACH,MAAO,CACLA,QAASG,EAAMH,QAAU,GAE7B,QACE,OAAOG,K,wxBCgDEG,MA3Df,SAAaC,GAAQ,IAAD,EACSC,aAAY,SAACL,GAAD,OAAWA,EAAMM,YAAhDT,EADU,EACVA,QAASU,EADC,EACDA,MAEXC,EAAYC,IAAOC,IAAV,IACCH,EAAMI,QAAU,UAAY,UAmB1BJ,EAAMI,QAAU,UAAY,WAcxCC,EAAWC,cASjB,OACE,kBAACL,EAAD,CAAWM,UAAU,OACnB,6BACE,uCAAaP,EAAMI,QAAU,QAAU,QACvC,4BAAKd,EAAQA,SACb,4BAAQkB,QAZU,WACtBH,EAAS,CAAEV,KAAM,gBAWb,cACA,4BAAQa,QAVU,WACtBH,EAAS,CAAEV,KAAM,gBASb,cACA,4BAAQa,QAAS,kBAAMH,EAAS,CAAEV,KAAM,mBAAxC,mB,+CCzDFN,EAAe,CAAEe,SAAS,GAYjBJ,EAVD,WAAmC,IAAlCP,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IAAK,eACH,OAAO,2BAAKF,GAAZ,IAAmBW,SAAUX,EAAMW,UAErC,QACE,OAAOX,ICEPM,EAAWU,0BAAgB,CAAEnB,QAASoB,IAAgBV,MAAOW,IAC7DC,EAAcH,0BAAgB,CAAEV,SAAUA,IAE1Cc,EAAQC,sBAAYF,EAAaG,iCAEvCC,iBACE,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.25383fe9.chunk.js","sourcesContent":["const initialState = {\n  counter: 0,\n};\n\nmodule.exports = function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nfunction App(props) {\n  const { counter, theme } = useSelector((state) => state.entities);\n\n  const StyledDiv = styled.div`\n    background: ${theme.isLight ? \"#03a9f4\" : \"#482880\"};\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    h1 {\n      text-align: center;\n      color: #fff;\n      font-size: 56px;\n      margin-bottom: 30px;\n    }\n    p {\n      text-align: center;\n      color: #fff;\n      font-size: 24px;\n    }\n    button {\n      border: none;\n      background: ${theme.isLight ? \"#81d4f9\" : \"#a393bf\"};\n      color: #fff;\n      padding: 10px 25px;\n      border-radius: 7px;\n      font-size: 18px;\n      margin: 0 30px;\n      outline: none;\n\n      &:hover {\n        background: #f98000;\n      }\n    }\n  `;\n\n  const dispatch = useDispatch();\n\n  const handleIncrement = () => {\n    dispatch({ type: \"INCREMENT\" });\n  };\n  const handleDecrement = () => {\n    dispatch({ type: \"DECREMENT\" });\n  };\n\n  return (\n    <StyledDiv className=\"App\">\n      <div>\n        <p>Theme is {theme.isLight ? \"Light\" : \"Dark\"}</p>\n        <h1>{counter.counter}</h1>\n        <button onClick={handleIncrement}> Increment</button>\n        <button onClick={handleDecrement}> Decrement</button>\n        <button onClick={() => dispatch({ type: \"CHANGE_THEME\" })}>change Theme</button>\n      </div>\n    </StyledDiv>\n  );\n}\n\nexport default App;\n","const initialState = { isLight: true };\n\nconst theme = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_THEME\":\n      return { ...state, isLight: !state.isLight };\n\n    default:\n      return state;\n  }\n};\n\nexport default theme;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport counterReducer from \"./reducers/counter\";\nimport themeReducer from \"./reducers/theme\";\n\nconst entities = combineReducers({ counter: counterReducer, theme: themeReducer });\nconst rootReducer = combineReducers({ entities: entities });\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}